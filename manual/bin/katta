#!/usr/bin/env bash
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.



# The Katta command script
#
# Environment Variables
#
#   JAVA_HOME        The java implementation to use.
#
#   KATTA_CLASSPATH Extra Java CLASSPATH entries.
#
#   KATTA_HEAPSIZE  The maximum amount of heap to use, in MB. 
#                    Default is 1000.
#
#   KATTA_OPTS      Extra Java runtime options.
#
#   KATTA_CONF_DIR  Alternate conf dir. Default is ${KATTA_HOME}/conf.
#
#   KATTA_ROOT_LOGGER The root appender. Default is INFO,console
#

unset CDPATH
bin=`dirname "$0"`
bin=`cd "$bin"; pwd`

. "$bin"/katta-config.sh

cygwin=false
case "`uname`" in
CYGWIN*) cygwin=true;;
esac

if [ -f "${KATTA_CONF_DIR}/katta-env.sh" ]; then
  . "${KATTA_CONF_DIR}/katta-env.sh"
fi

# some Java parameters
JAVA=`which java 2>/dev/null`
if [[ $JAVA_HOME != "" ]]; then
    JAVA=$JAVA_HOME/bin/java
fi
if test -z "$JAVA"; then
    echo "No java found in the PATH. Please set JAVA_HOME."
    exit 1
fi
JAVA_HEAP_MAX=-Xmx1000m 

# check envvars which might override default args
if [ "$KATTA_HEAPSIZE" != "" ]; then
  #echo "run with heapsize $KATTA_HEAPSIZE"
  JAVA_HEAP_MAX="-Xmx""$KATTA_HEAPSIZE""m"
  #echo $JAVA_HEAP_MAX
fi

# CLASSPATH initially contains $KATTA_CONF_DIR
CLASSPATH="${KATTA_CONF_DIR}"

# for developers, add Katta classes to CLASSPATH
if [ -d "$KATTA_HOME/build/classes-main" ]; then
  CLASSPATH=${CLASSPATH}:$KATTA_HOME/build/classes-main
fi

if [ -d "$KATTA_HOME/build/classes-tests" ]; then
  CLASSPATH=${CLASSPATH}:$KATTA_HOME/build/classes-test
fi

# so that filenames w/ spaces are handled correctly in loops below
# IFS=

# for releases, add core katta jar to CLASSPATH
for f in $KATTA_HOME/katta-*.jar; do
  CLASSPATH=${CLASSPATH}:$f;
done

# add libs to CLASSPATH
for jar in $KATTA_HOME/lib/*.jar; do
  CLASSPATH=${CLASSPATH}:$jar;
done

# add user-specified CLASSPATH last
if [ "$KATTA_CLASSPATH" != "" ]; then
  CLASSPATH=${CLASSPATH}:${KATTA_CLASSPATH}
fi

# default log directory & file
if [ "$KATTA_LOG_DIR" = "" ]; then
  KATTA_LOG_DIR="$KATTA_HOME/logs"
fi
if [ "$KATTA_LOGFILE" = "" ]; then
  KATTA_LOGFILE='katta.log'
fi

# cygwin path translation
if $cygwin; then
  CLASSPATH=`cygpath -p -w "$CLASSPATH"`
  KATTA_HOME=`cygpath -d "$KATTA_HOME"`
  KATTA_LOG_DIR=`cygpath -d "$KATTA_LOG_DIR"`
fi

# cygwin path translation
if $cygwin; then
  JAVA_LIBRARY_PATH=`cygpath -p "$JAVA_LIBRARY_PATH"`
fi
 
# restore ordinary behaviour
# unset IFS

CLASS='net.sf.katta.Katta'

KATTA_OPTS="$KATTA_OPTS -Dkatta.log.dir=$KATTA_LOG_DIR"
KATTA_OPTS="$KATTA_OPTS -Dkatta.log.file=$KATTA_LOGFILE"
KATTA_OPTS="$KATTA_OPTS -Dkatta.home.dir=$KATTA_HOME"
KATTA_OPTS="$KATTA_OPTS -Dkatta.id.str=$KATTA_IDENT_STRING"
KATTA_OPTS="$KATTA_OPTS -Dkatta.root.logger=${KATTA_ROOT_LOGGER:-INFO,console}"
if [ "x$JAVA_LIBRARY_PATH" != "x" ]; then
  KATTA_OPTS="$KATTA_OPTS -Djava.library.path=$JAVA_LIBRARY_PATH"
fi

# run it
exec "$JAVA" $JAVA_HEAP_MAX $KATTA_OPTS -classpath "$CLASSPATH" $CLASS "$@"
